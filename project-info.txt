Home Automation Course Project Overview
In your course project, you will use the techniques and coding practices that you have learned to develop a C++ program. Each milestone assignment will include techniques taught in the earlier weeks and new techniques from the week in which the milestone is assigned. 

Your Mission
Your company has been chosen to develop a system to control home automation. You will be working on the main program that manages smart devices in a home. They include smart thermostats, televisions, vacuum robots, lights and security systems. 

The control software is a central interface to manage all of these devices. Some functionality will be common to all of the devices. These include communications to and from the control software and the devices, and device health reports (system errors).

Device-specific functionality will allow the owner of the smart home to control each device from the central program or set up devices to be controlled by the central program through automation. For example, the central program will allow the homeowner to run a robot vacuum manually, or set appropriate times for it to be activated by the central program, without homeowner intervention. 

(NOTE: Since we will not have actual devices to control, you will need to create some simple simulation code for messages being consumed by each device, messages for device health and messages for device activation, etc. )

Smart Thermostats can be manually controlled by the homeowner or they can set up temperatures for day and evening. (To keep complexity down, we will assume only one smart thermostat and that it can only have day and evening temperatures. You are welcome to break those down by day, if desired.)
The television system may be manually controlled from the main program, turning the television on or off or changing channels. The main program can also set up the television to turn on and off based on day and time to simulate someone being home.
Lights may be manually turned off or on from the main program. ( We will limit the program to turning all lights on or off in a room to avoid complexity). 
the security system consists of an alarm and motion-activated lights. This system can be manually turned on or off or can be set to run automatically. The user shall be able to set up the time range for security system activation and the sensitivity level of the motion-activated lights. A value of 1 is least sensitive and a value of 5 most sensitive, with the intermediate range in whole numbers.
 

Program Requirements
Your program shall include the following, as a minimum:

- Industry standard OO programming techniques for C++
- Use of STL
- At least one User Defined Template
- Input/Output to file
- Exception Handling
- At least one pointer
- Polymorphism 
- Single Inheritance

The file structure of the program shall have the driver (main()) in its own .cpp file. Each class shall be declared in a separate .h file and implemented in its own .cpp file. 
Review the requirements to determine how we might create an efficient OO program to solve the problem.

What will the class structure look like? What type of inheritance? Polymorphism? Algorithms or Data Structures that may be useful.
What type of interface will the system use? (Note: If you decide to use a GUI interface, please be sure that you have a solid understanding of GUI programming and events. Please make sure that you include enough information about the GUI tools you will be using so that your instructor can ensure that the system will not be too complex.)